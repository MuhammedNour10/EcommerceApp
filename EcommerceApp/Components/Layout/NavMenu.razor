@using EcommerceApp.Data
@using EcommerceApp.Utility
@using Microsoft.AspNetCore.Identity
@rendermode InteractiveServer
@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EcommerceApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill me-2" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="category" Match="NavLinkMatch.All">
                <span class="bi bi-tags-fill me-2" aria-hidden="true"></span> Category
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="product" Match="NavLinkMatch.All">
                <span class="bi bi-box-seam me-2" aria-hidden="true"></span> Product
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="order/list" Match="NavLinkMatch.All">
                <span class="bi bi-clipboard-check me-2" aria-hidden="true"></span> Orders
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="auth">
                <span class="bi bi-shield-lock-fill me-2" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center" href="Account/Manage">
                        <span class="bi bi-person-circle me-2" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl" />
                        <button type="submit" class="nav-link d-flex align-items-center">
                            <span class="bi bi-box-arrow-right me-2" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center" href="Account/Register">
                        <span class="bi bi-person-plus me-2" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center" href="Account/Login">
                        <span class="bi bi-box-arrow-in-right me-2" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>



@code {

    private string? _currentUrl;
    // [Inject]
    // private SignInManager<ApplicationUser> SignInManager { get; set; } = default!;
    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        @* StateHasChanged(); *@
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}
